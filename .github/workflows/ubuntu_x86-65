name: amd64

on:
  push:
    branches: [ master ]
#  pull_request:
#    branches: [ debianize ]

defaults:
  run:
    working-directory: ./mjpg-streamer-experimental
    
jobs:
  build:
    runs-on: ubuntu-18.04
    #container:
      #image: debian:buster

    steps:
    - uses: actions/checkout@v2
    - name: install
      run: |
       apt update
       apt-get install -y libsdl1.2-dev libjpeg8-dev
       #libjpeg62-turbo-dev
       apt-get install -y debhelper devscripts cmake libgphoto2-dev libopencv-dev python3-numpy python3-dev libzmq3-dev libprotobuf-c-dev protobuf-c-compiler
    - name: build
      run: |
       #sed -i 's/\${OpenCV_VERSION_MAJOR} EQUAL 3)/"\${OpenCV_VERSION_MAJOR} EQUAL 3")/' plugins/input_opencv/CMakeLists.txt
       #sed -i 's/\${PYTHON_VERSION_MAJOR} EQUAL 3)/"\${PYTHON_VERSION_MAJOR} EQUAL 3")/' plugins/input_opencv/filters/cvfilter_py/CMakeLists.txt
       tar -zcf ../mjpg-streamer-experimental.orig.tar.gz ../mjpg-streamer-experimental
       dpkg-buildpackage -r -us -uc
    - name: Creating out
      id: ver
      run: |
       rm -r ../mjpg-streamer-experimental ../.g* ../README.md
       echo ::set-output name=uname::$(uname -m)
       #echo "The uname output was ${{ steps.ver.outputs.uname }}"
       ls -l ..
    - name: Upload build 
      uses: actions/upload-artifact@v2
      with: 
         name: "mjpg-streamer_debian-buster_${{ steps.ver.outputs.uname }}"
         path: .
